name: Deploy Cloudflare Worker

on:
  workflow_call:
    inputs:
      d1_database_id:
        description: 'Database id in toml'
        required: true
        type: string
      d1_apparent_database_id:
        description: 'Database id to actually use'
        required: true
        type: string
      pages_url:
        description: 'URL of frontend deployment in pages for CORS'
        required: true
        type: string
      worker_url:
        description: 'URL of worker deployment'
        required: true
        type: string

jobs:
  deploy:
    name: Deploy Cloudflare Worker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Cloudflare Workers CLI
        run: |
          npm install -g wrangler

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test:run

      - name: Build TypeScript
        run: npm run build

      - name: Replace database id in wrangler.toml
        run: |
          sed -i -e 's/${{ inputs.d1_database_id }}/${{ inputs.d1_apparent_database_id }}/g' wrangler.toml
          cat wrangler.toml

      - name: Build and deploy worker
        id: deploy_worker
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          wrangler deploy --var FRONTEND_URL:${{ inputs.pages_url }}
          echo "${{ secrets.TELEGRAM_BOT_TOKEN }}" | wrangler secret put TELEGRAM_BOT_TOKEN
          INIT_SECRET=$(openssl rand -hex 24)
          echo $INIT_SECRET | wrangler secret put INIT_SECRET
          TELEGRAM_WEBHOOK_SECRET=$(openssl rand -hex 24)
          echo $TELEGRAM_WEBHOOK_SECRET | wrangler secret put TELEGRAM_WEBHOOK_SECRET
          echo init_secret=$INIT_SECRET >> $GITHUB_OUTPUT

      - name: Send init command to worker
        run: |
          echo "Waiting for secrets to propagate..."
          sleep 5
          echo "Testing worker endpoint..."
          curl -f ${{ inputs.worker_url }}/ || echo "Worker base URL test failed"
          echo "Sending init command..."
          curl -X POST -H "Authorization: Bearer ${{ steps.deploy_worker.outputs.init_secret }}" \
            -H "Content-Type: application/json" \
            -d '{"externalUrl": "${{ inputs.worker_url }}"}' \
            --max-time 10 \
            --retry 5 \
            --retry-delay 1 \
            --retry-max-time 40 \
            --retry-all-errors \
            --fail \
            -v \
            ${{ inputs.worker_url }}/init
